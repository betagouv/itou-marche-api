name: Itou Test & Lint tasks

on: [push]

jobs:
  linting_check:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install System dependencies
        run: |
          sudo apt-get -y install gdal-bin

      #----------------------------------------------
      # install your root project
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      #              run lint suite
      # Why not install default flake8 or pylint ? 
      # Because we use pyproject.toml config file, and
      # prefer locally reproducible tests.
      #----------------------------------------------
      - name: Run Linters
        run: |
            source .venv/bin/activate
            echo "flake8"
            pflake8 "./lemarche"
            echo "black"
            black . --check
            echo "isort"
            isort ./lemarche/*.py --check-only

      #----------------------------------------------
      #              run tests
      #----------------------------------------------
      - name: Run Tests
        run: |
            source .venv/bin/activate
            coverage run --source='./lemarche' ./manage.py test
            coverage report
