[tool.poetry]
name = "lemarche"
version = "0.5"
description = "API du march√© de l'Inclusion"
authors = ["pmontens <pieterjan@montens.net>"]
packages = [
]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^3.2.1"
djangorestframework = "^3.12.4"
mysqlclient = "^2.0.3"
drf-spectacular = "^0.15.1"
psycopg2-binary = "^2.8.6"
hashids = "^1.3.1"
flake8 = "^3.9.2"
httpx = "^0.18.1"
whitenoise = "^5.2.0"
django-filter = "^2.4.0"
django-bootstrap4 = "^3.0.1"
django-compressor = "^2.4.1"
django-ckeditor = "^6.1.0"
django-libsass = "^0.9"
django-environ = "^0.4.5"
django-crispy-forms = "^1.12.0"
PyMySQL = "^1.0.2"

[tool.poetry.dev-dependencies]
isort = "^5.8.0"
pyproject-flake8 = "^0.0.1-alpha.2"
flake8 = "^3.9.2"
poethepoet = "^0.10.0"
black = "^21.5b2"
pytest-django = "^4.4.0"
factory-boy = "^3.2.0"
coverage = "^5.5"
django-debug-toolbar = "^3.2.2"
django-extensions = "^3.1.3"
ipython = "^7.27.0"
pre-commit = "^2.15.0"

[tool.poetry.scripts]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
# E203: Whitespace before ':', used to please Black in `yield items[i : i + n]`
# E266: Too many leading '#' for block comment
# W503: Line break occurred before a binary operator
max-line-length = 119
ignore = "E203, E266, W503"
max-complexity = 10

[tool.isort]
combine_as_imports = true
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "lemarche"
lines_after_imports = 2
line_length = 119
multi_line_output = 3
use_parentheses = true

[tool.black]
line-length = 119
target-version = ['py38', 'py39']
include = '\.pyi?$'

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "lemarche.settings.test"

[tool.poe.tasks]
export = { shell = "poetry export --output requirements/staging.txt" }
export_dev = { shell = "poetry export --dev --output requirements/dev.txt" }
flake8 = { shell = "pflake8 lemarche"}
isort = { shell = "isort ./lemarche/*.py"}
black = { shell = "black lemarche"}
clean_code = ["isort", "black"]
clean = { shell = "rm -r __pycache__/" }
runserver = { shell = "python3 ./manage.py runserver"}
migrate = { shell = "python3 ./manage.py migrate"}
makemigrations = { shell = "python3 ./manage.py makemigrations"}
